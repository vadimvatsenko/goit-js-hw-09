{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAhBMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAoBtB,SAAsBC,GACpBA,EAAEC,iBACF,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAGiB,IAAnBC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAGhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAErCzB,EAAcyB,EAAGL,GAEdM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,UAEtD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,UAEtDkB,GAAcG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n\n\n  });\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = e.currentTarget;\n\n  //троки конвертируем в числа\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let amountValue = Number(amount.value);\n\n\n  for (let i = 1; i <= amountValue; i += 1) {\n\n    createPromise(i, firstDelay)\n\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelay += delayStep;\n  };\n};\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","firstDelay","Number","value","delayStep","amountValue","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.3a20f4ba.js.map"}